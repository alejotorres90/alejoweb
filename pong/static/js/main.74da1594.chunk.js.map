{"version":3,"sources":["components/NumberPlayers.js","components/PlayersNames.js","components/Schedule.js","components/Positions.js","components/NextMatch.js","RoundRobin.js","App.js","index.js"],"names":["NumberPlayers","props","useState","numberPlayers","setNumberPlayers","id","style","backgroundImage","onClick","prevNumberPlayers","handler","newLeagueHandler","continueHandler","PlayersNames","playersNames","setPlayersNames","handleInput","event","prevPlayersNames","target","value","className","inputs","i","push","type","maxLength","onChange","autoComplete","renderInputs","undefined","alert","Schedule","alreadyPlayedHandler","currentTarget","matches","map","match","index","alreadyPlayed","playerOne","pointsPlayerOne","playerTwo","pointsPlayerTwo","positionsHandler","nextMatchHandler","Positions","width","players","player","length","name","matchesPlayed","matchesWon","matchesLost","points","scheduleHandler","NextMatch","NUMBER_REGEX","RegExp","scorePlayerOne","setScorePlayerOne","scorePlayerTwo","setScorePlayerTwo","test","backHandler","applyHandler","rotate","array","temp","roundRobin","roundRobinPlayers","unshift","j","App","currentScreen","setCurrentScreen","prevScreen","setPrevScreen","setPlayers","useEffect","localStorage","setItem","JSON","stringify","setMatches","nextMatch","setNextMatch","actualNextMatch","setActualNextMatch","numberPlayersNewLeagueHandler","userNumberPlayers","numberPlayersContinueHandler","parse","getItem","parseInt","playersNamesHandler","ctr","Math","floor","random","prevPlayers","schedulePositionsHandler","scheduleNextMatchHandler","scheduleAlreadyPlayedHandler","positionsScheduleHandler","positionsNextMatchHandler","nextMatchBackHandler","sortPlayers","a","b","nextMatchApplyHandler","funcNextMatch","funcActualNextMatch","funcMatches","funcPlayers","find","obj","sort","prevMatches","renderScreen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74da1594.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './NumberPlayers.css';\r\n\r\nfunction NumberPlayers(props) {\r\n\r\n  const [numberPlayers, setNumberPlayers] = useState(3)\r\n\r\n  function increase() {\r\n    if (numberPlayers < 20) {\r\n      setNumberPlayers(prevNumberPlayers => prevNumberPlayers + 1)\r\n    }\r\n  }\r\n\r\n  function decrease() {\r\n    if (numberPlayers > 3) {\r\n      setNumberPlayers(prevNumberPlayers => prevNumberPlayers - 1)\r\n    }\r\n  }\r\n\r\n  function newLeagueHandler() {\r\n    props.handler.newLeagueHandler(numberPlayers);\r\n  }\r\n\r\n  function continueHandler() {\r\n    props.handler.continueHandler();\r\n  }\r\n\r\n  return (\r\n    <div id=\"number-players-container\">\r\n      <div id=\"number-players-box\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/players-container.png)\" }}>\r\n        <p id=\"numberPlayers\">{numberPlayers}</p>\r\n        <div id=\"number-players-button-container\">\r\n          <button id=\"number-players-up\" onClick={increase} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/up-button.png)\" }}></button>\r\n          <br />\r\n          <button id=\"number-players-down\" onClick={decrease} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/down-button.png)\" }}></button>\r\n        </div>\r\n      </div>\r\n      <button id=\"number-players-new-league\" onClick={newLeagueHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/big-button.png)\" }}>NEW LEAGUE</button>\r\n      <button id=\"number-players-continue\" onClick={continueHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/big-button.png)\" }}>CONTINUE</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NumberPlayers;","import React, {useState} from 'react';\r\n\r\nimport './PlayersNames.css';\r\n\r\nfunction PlayersNames(props) {\r\n\r\n  const [playersNames, setPlayersNames] = useState([]);\r\n\r\n  function handleInput(event) {\r\n    setPlayersNames((prevPlayersNames) => {prevPlayersNames[event.target.id] = event.target.value; return prevPlayersNames});\r\n  }\r\n\r\n  function continueHandler() {\r\n    for (let i=0; i<props.numberPlayers; i++) {\r\n      if (playersNames[i] === undefined || playersNames[i] === \"\") {\r\n        alert(\"Please complete all the names before continuing\");\r\n        return;\r\n      }\r\n    }\r\n    props.handler(playersNames);\r\n  }\r\n\r\n  function renderInputs() {\r\n    let inputs = []\r\n    for (let i=0; i<props.numberPlayers; i++) {\r\n      inputs.push(<input type=\"text\" maxLength=\"7\" value={playersNames[i]} className='players-names-input' id={i} key={i} onChange={handleInput} autoComplete='off' style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/name-container.png)\" }} />);\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  return (\r\n    <div id=\"players-names-container\">\r\n      <p className=\"ribbon\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/ribbon.png)\" }}>ENTER THE NAMES</p>\r\n      <div id=\"players-names-input-container\">\r\n        {renderInputs()}\r\n      </div>\r\n      <button id=\"players-names-continue\" onClick={continueHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>CONTINUE</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayersNames;","import React from 'react';\r\n\r\nimport './Schedule.css';\r\n\r\nfunction Schedule(props) {\r\n\r\n  function alreadyPlayedHandler(event) {\r\n    props.handler.alreadyPlayedHandler(event.currentTarget.id);\r\n  }\r\n  \r\n  function createMatches() {\r\n    return props.matches.map((match, index) => (\r\n      <div key={index} id={index} className={'schedule-match ' + (match.alreadyPlayed ? 'schedule-match-played' : null)} onClick={match.alreadyPlayed ? alreadyPlayedHandler : null} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/match-container.png)\" }}>\r\n        <div className=\"schedule-player-one\">\r\n          <p className=\"schedule-player-name\">{match.playerOne}</p>\r\n          <p className=\"schedule-player-points\">{match.pointsPlayerOne}</p>\r\n        </div>\r\n        <div className=\"schedule-player-two\">\r\n          <p className=\"schedule-player-name\">{match.playerTwo}</p>\r\n          <p className=\"schedule-player-points\">{match.pointsPlayerTwo}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  function positionsHandler() {\r\n    props.handler.positionsHandler();\r\n  }\r\n\r\n  function nextMatchHandler() {\r\n    props.handler.nextMatchHandler();\r\n  }\r\n\r\n  return (\r\n    <div id=\"schedule-container\">\r\n      <p className=\"ribbon\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/ribbon.png)\" }}>SCHEDULE</p>\r\n      <div id=\"schedule-matches-container\">\r\n        {createMatches()}\r\n      </div>\r\n      <button id=\"schedule-positions\" onClick={positionsHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>POSITIONS</button>\r\n      <button id=\"schedule-next-match\" onClick={nextMatchHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>NEXT MATCH</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedule;","import React from 'react';\r\n\r\nimport './Positions.css'\r\n\r\nfunction Positions(props) {\r\n\r\n  function scheduleHandler() {\r\n    props.handler.scheduleHandler();\r\n  }\r\n\r\n  function nextMatchHandler() {\r\n    props.handler.nextMatchHandler();\r\n  }\r\n\r\n  function createRows(){\r\n    let newRows = props.players.map((player, index) => {\r\n      if (index<props.players.length-1) {\r\n      return (<tr className=\"positions-table-middle\" key={index} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/positions-background-middle.png)\" }}>\r\n        <td className=\"positions-table-data positions-table-data-name\">{player.name}</td>\r\n        <td className=\"positions-table-data\">{player.matchesPlayed}</td>\r\n        <td className=\"positions-table-data\">{player.matchesWon}</td>\r\n        <td className=\"positions-table-data\">{player.matchesLost}</td>\r\n        <td className=\"positions-table-data\">{player.points}</td>\r\n      </tr>)\r\n      } else {\r\n        return (<tr className=\"positions-table-bottom\" key={index} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/positions-background-bottom.png)\" }}>\r\n        <td className=\"positions-table-data positions-table-data-name\">{player.name}</td>\r\n        <td className=\"positions-table-data\">{player.matchesPlayed}</td>\r\n        <td className=\"positions-table-data\">{player.matchesWon}</td>\r\n        <td className=\"positions-table-data\">{player.matchesLost}</td>\r\n        <td className=\"positions-table-data\">{player.points}</td>\r\n      </tr>)\r\n      }\r\n    });\r\n    return newRows;\r\n  }\r\n\r\n  return (\r\n    <div id=\"positions-container\">\r\n    <p className=\"ribbon\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/ribbon.png)\" }}>POSITIONS</p>\r\n    <table id=\"positions-table\">\r\n      <thead>\r\n        <tr id=\"positions-table-top\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/positions-background-top.png)\" }}>\r\n          <th className=\"positions-table-head\" style={{ width: '50px' }}>PLAYER</th>\r\n          <th className=\"positions-table-head\">P</th>\r\n          <th className=\"positions-table-head\">W</th>\r\n          <th className=\"positions-table-head\">L</th>\r\n          <th className=\"positions-table-head\">PTS</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {createRows()}\r\n      </tbody>\r\n    </table>\r\n    <button id=\"positions-schedule\" onClick={scheduleHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>SCHEDULE</button>\r\n    <button id=\"positions-next-match\" onClick={nextMatchHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>NEXT MATCH</button>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Positions;","import React, { useState } from 'react';\r\n\r\nimport './NextMatch.css'\r\n\r\nfunction NextMatch(props) {\r\n\r\n  const NUMBER_REGEX = new RegExp('^[0-9]*$');\r\n  const [scorePlayerOne, setScorePlayerOne] = useState(\"\");\r\n  const [scorePlayerTwo, setScorePlayerTwo] = useState(\"\");\r\n\r\n  function handleInput(event) {\r\n    if (NUMBER_REGEX.test(event.target.value) || event.target.value === \"\"){\r\n      if (event.target.value.length === 2 && event.target.value[0] === \"0\") {\r\n        if(event.target.id === \"next-match-player-one-points\") {\r\n          setScorePlayerOne(event.target.value[1]);\r\n        } else {\r\n          setScorePlayerTwo(event.target.value[1]);\r\n        }\r\n      } else {\r\n        if(event.target.id === \"next-match-player-one-points\") {\r\n          setScorePlayerOne(event.target.value);\r\n        } else {\r\n          setScorePlayerTwo(event.target.value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function backHandler(){\r\n    props.handler.backHandler();\r\n  }\r\n\r\n  function applyHandler() {\r\n    if (scorePlayerOne === \"\" || scorePlayerTwo === \"\") {\r\n      alert(\"Please complete both fields before continuing\");\r\n      return;\r\n    }\r\n    props.handler.applyHandler(scorePlayerOne, scorePlayerTwo);\r\n  }\r\n\r\n  return (\r\n    <div id=\"next-match-container\">\r\n    <p className=\"ribbon\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/ribbon.png)\" }}>INSERT SCORE</p>\r\n    <div id=\"next-match-match\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/match-container.png)\" }}>\r\n        <div id=\"next-match-player-one\">\r\n          <p className=\"next-match-player-name\">{props.match.playerOne}</p>\r\n          <input type=\"text\" value={scorePlayerOne} maxLength=\"2\" id=\"next-match-player-one-points\" onChange={handleInput} autoComplete='off'></input>\r\n        </div>\r\n        <div id=\"next-match-player-two\">\r\n          <p className=\"next-match-player-name\">{props.match.playerTwo}</p>\r\n          <input type=\"input\" value={scorePlayerTwo} maxLength=\"2\" id=\"next-match-player-two-points\" onChange={handleInput} autoComplete='off'></input>\r\n        </div>\r\n      </div>\r\n    <button id=\"next-match-back\" onClick={backHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>BACK</button>\r\n    <button id=\"next-match-apply\" onClick={applyHandler} style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/small-button.png)\" }}>APPLY</button>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default NextMatch;","function rotate(array) {\r\n    let temp = array[array.length/2];\r\n\r\n    for(let i=array.length/2+1; i<array.length; i++) {\r\n        array[i-1] = array[i];\r\n    }\r\n\r\n    array[array.length-1] = array[array.length/2-1];\r\n\r\n    for(let i=array.length/2-1; i>0; i--) {\r\n        array[i] = array[i-1];\r\n    }\r\n\r\n    array[1] = temp;\r\n    return array;\r\n}\r\n\r\nfunction roundRobin(players){\r\n    //Add dummy player if even number of players\r\n\r\n    let roundRobinPlayers = [...players];\r\n\r\n    if (roundRobinPlayers.length%2 === 1) {\r\n        roundRobinPlayers.unshift(\"\");\r\n    }\r\n\r\n    let matches = [];\r\n\r\n    for(let i=0; i<roundRobinPlayers.length-1; i++){\r\n        for(let j=0; j<roundRobinPlayers.length/2; j++){\r\n            if (roundRobinPlayers[j] !== \"\" && roundRobinPlayers[j + roundRobinPlayers.length/2] !== \"\") {\r\n                matches.push({\r\n                    playerOne : roundRobinPlayers[j],\r\n                    pointsPlayerOne : \"\",\r\n                    playerTwo : roundRobinPlayers[j + roundRobinPlayers.length/2],\r\n                    pointsPlayerTwo : \"\",\r\n                    alreadyPlayed : false\r\n                });\r\n            }\r\n        }\r\n        roundRobinPlayers = rotate(roundRobinPlayers)\r\n    }\r\n\r\n    return matches;\r\n}\r\n\r\nexport default roundRobin;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport NumberPlayers from './components/NumberPlayers'\nimport PlayersNames from './components/PlayersNames'\nimport Schedule from './components/Schedule'\nimport Positions from './components/Positions'\nimport NextMatch from './components/NextMatch'\n\nimport roundRobin from './RoundRobin'\n\nfunction App() {\n\n  const [currentScreen, setCurrentScreen] = useState(\"numberPlayers\")\n\n  const [prevScreen, setPrevScreen] = useState(\"schedule\")\n\n  const [numberPlayers, setNumberPlayers] = useState(3);\n\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    if (players.length > 0) {\n      localStorage.setItem('players', JSON.stringify(players));\n    }\n  }, [players]);\n\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    if (matches.length > 0) {\n      localStorage.setItem('matches', JSON.stringify(matches));\n    }\n  }, [matches]);\n\n  const [nextMatch, setNextMatch] = useState();\n\n  const [actualNextMatch, setActualNextMatch] = useState();\n  useEffect(() => {\n    if (actualNextMatch !== undefined) {\n      localStorage.setItem('actualNextMatch', actualNextMatch);\n    }\n  }, [actualNextMatch]);\n\n  function numberPlayersNewLeagueHandler(userNumberPlayers) {\n    setNumberPlayers(userNumberPlayers);\n\n    //Set new screen\n    setCurrentScreen(\"playersNames\");\n  }\n\n  function numberPlayersContinueHandler() {\n    if (localStorage.length > 0) {\n      setCurrentScreen(\"positions\");\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      setMatches(JSON.parse(localStorage.getItem('matches')));\n      setNextMatch(parseInt(localStorage.getItem('actualNextMatch')));\n      setActualNextMatch(parseInt(localStorage.getItem('actualNextMatch')));\n    } else {\n      alert(\"There is no league saved to continue\");\n    }\n  }\n\n  function playersNamesHandler(playersNames) {\n    //Random name order\n    let ctr = playersNames.length;\n    let temp;\n    let index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = playersNames[ctr];\n      playersNames[ctr] = playersNames[index];\n      playersNames[index] = temp;\n    }\n\n    //Set players\n    setPlayers((prevPlayers) => {\n      for (let i = 0; i < numberPlayers; i++) {\n        prevPlayers[i] = {};\n        prevPlayers[i].name = playersNames[i];\n        prevPlayers[i].matchesPlayed = 0;\n        prevPlayers[i].matchesWon = 0;\n        prevPlayers[i].matchesLost = 0;\n        prevPlayers[i].points = 0;\n      }\n      let newPlayers = [...prevPlayers]\n      return newPlayers;\n    });\n\n    //Set nextMatches\n    setActualNextMatch(0);\n    setNextMatch(0);\n\n    //Create matches array\n    setMatches(roundRobin(playersNames));\n\n    //Set new screen\n    setCurrentScreen(\"schedule\");\n  }\n\n  function schedulePositionsHandler() {\n    setCurrentScreen(\"positions\")\n  }\n\n  function scheduleNextMatchHandler() {\n    setPrevScreen(\"schedule\");\n    if (nextMatch < matches.length) { setCurrentScreen(\"nextMatch\"); }\n  }\n\n  function scheduleAlreadyPlayedHandler(index) {\n    setNextMatch(index);\n    setPrevScreen(\"schedule\");\n    setCurrentScreen(\"nextMatch\");\n  }\n\n  function positionsScheduleHandler() {\n    setCurrentScreen(\"schedule\");\n  }\n\n  function positionsNextMatchHandler() {\n    setPrevScreen(\"positions\");\n    if (nextMatch < matches.length) { setCurrentScreen(\"nextMatch\") }\n  }\n\n  function nextMatchBackHandler() {\n    setNextMatch(actualNextMatch);\n    setCurrentScreen(prevScreen);\n  }\n\n  //Use score to sort players\n  function sortPlayers(a, b) {\n    if (a.points > b.points) return -1;\n    if (b.points > a.points) return 1;\n    return 0;\n  }\n\n  function nextMatchApplyHandler(scorePlayerOne, scorePlayerTwo) {\n\n    let funcNextMatch = nextMatch;\n    let funcActualNextMatch = actualNextMatch;\n    let funcMatches = [...matches];\n    let funcPlayers = [...players];\n\n    let playerOne = funcPlayers.find(obj => obj.name === funcMatches[funcNextMatch].playerOne);\n    let playerTwo = funcPlayers.find(obj => obj.name === funcMatches[funcNextMatch].playerTwo);\n\n    //Si nextMatch !== del verdadero nextMatch, deshacer cambios de los players basados en el resultado antiguo\n    if (funcNextMatch !== funcActualNextMatch) {\n      if (funcMatches[funcNextMatch].pointsPlayerOne > funcMatches[funcNextMatch].pointsPlayerTwo) {\n        playerOne.points = playerOne.points - 2;\n        playerOne.matchesPlayed = playerOne.matchesPlayed - 1;\n        playerOne.matchesWon = playerOne.matchesWon - 1;\n        if (funcMatches[funcNextMatch].pointsPlayerTwo > 14) {\n          playerTwo.points = playerTwo.points - 1;\n        }\n        playerTwo.matchesPlayed = playerTwo.matchesPlayed - 1;\n        playerTwo.matchesLost = playerTwo.matchesLost - 1;\n      } else {\n        playerTwo.points = playerTwo.points - 2;\n        playerTwo.matchesPlayed = playerTwo.matchesPlayed - 1;\n        playerTwo.matchesWon = playerTwo.matchesWon - 1;\n        if (funcMatches[funcNextMatch].pointsPlayerOne > 14) {\n          playerOne.points = playerOne.points - 1;\n        }\n        playerOne.matchesPlayed = playerOne.matchesPlayed - 1;\n        playerOne.matchesLost = playerOne.matchesLost - 1;\n      }\n    }\n\n    //Update players according to new result\n    if (scorePlayerOne > scorePlayerTwo) {\n      playerOne.points = playerOne.points + 2;\n      playerOne.matchesPlayed = playerOne.matchesPlayed + 1;\n      playerOne.matchesWon = playerOne.matchesWon + 1;\n      if (scorePlayerTwo > 14) {\n        playerTwo.points = playerTwo.points + 1;\n      }\n      playerTwo.matchesPlayed = playerTwo.matchesPlayed + 1;\n      playerTwo.matchesLost = playerTwo.matchesLost + 1;\n    } else {\n      playerTwo.points = playerTwo.points + 2;\n      playerTwo.matchesPlayed = playerTwo.matchesPlayed + 1;\n      playerTwo.matchesWon = playerTwo.matchesWon + 1;\n      if (scorePlayerOne > 14) {\n        playerOne.points = playerOne.points + 1;\n      }\n      playerOne.matchesPlayed = playerOne.matchesPlayed + 1;\n      playerOne.matchesLost = playerOne.matchesLost + 1;\n    }\n\n    funcPlayers.sort(sortPlayers);\n    setPlayers(funcPlayers);\n\n    //Use score to update match\n    setMatches((prevMatches) => {\n      prevMatches[funcNextMatch].pointsPlayerOne = scorePlayerOne;\n      prevMatches[funcNextMatch].pointsPlayerTwo = scorePlayerTwo;\n      prevMatches[funcNextMatch].alreadyPlayed = true;\n      return [...prevMatches];\n    });\n\n    \n    if (funcActualNextMatch === funcNextMatch) {\n    setActualNextMatch(funcActualNextMatch + 1);\n    }\n    setNextMatch(() => {\n      if (funcActualNextMatch === funcNextMatch) {\n        return funcNextMatch + 1;\n      }\n      return funcActualNextMatch;\n    });\n\n    //Set currentScreen\n    setCurrentScreen(prevScreen);\n  }\n\n  function renderScreen() {\n    switch (currentScreen) {\n      case \"numberPlayers\":\n        return <NumberPlayers handler={{ newLeagueHandler: numberPlayersNewLeagueHandler, continueHandler: numberPlayersContinueHandler }} />\n      case \"playersNames\":\n        return <PlayersNames handler={playersNamesHandler} numberPlayers={numberPlayers} />\n      case \"schedule\":\n        return <Schedule handler={{ positionsHandler: schedulePositionsHandler, nextMatchHandler: scheduleNextMatchHandler, alreadyPlayedHandler: scheduleAlreadyPlayedHandler }} matches={matches} />\n      case \"positions\":\n        return <Positions handler={{ scheduleHandler: positionsScheduleHandler, nextMatchHandler: positionsNextMatchHandler }} players={players} />\n      case \"nextMatch\":\n        return <NextMatch handler={{ backHandler: nextMatchBackHandler, applyHandler: nextMatchApplyHandler }} match={matches[nextMatch]} />\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className=\"App\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/imgs/racket.png)\" }}>\n      {renderScreen()}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}